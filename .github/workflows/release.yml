# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [ main, pom ]
    pull_request:
        branches: [ main ]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
        inputs:
            deploy:
                description: "Environment's name to deploy, must be integration, staging or prod"
                required: true

permissions:
    contents: write
    packages: write
    pull-requests: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        env:
            GIT_BRANCH: main
        #       ENVIRONMENT_TAG_NAME: integration
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            -   name: Set up JDK 11
                uses: actions/setup-java@v2
                with:
                    distribution: 'adopt'
                    java-version: '11'
                    java-package: jdk
                    architecture: x64

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
                    #       # Runs versionning
                    #       - name: Bump version and push tag
                    #         uses: hennejg/github-tag-action@v4.3.1
                    #         with:
                    #           tag_prefix: s
                    #           github_token: ${{ secrets.GITHUB_TOKEN }}

                    #       - id: date
                    #         run: echo "##[set-output name=data;]$(date)"
                    #       - name: Time badge
                    # #         if: ${{ github.event.inputs.deploy == 'staging' }}
                    #         uses: RubbaBoy/BYOB@v1.2.0
                    #         with:
                    #           NAME: stagingCommit
                    #           LABEL: 'Staging deploy on commit'
                    #           STATUS: ${{ github.sha }}
                    #           COLOR: 0BD491
                #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Runs integration release
#            -   name: Semantic Release
#                uses: codfish/semantic-release-action@v1
#                with:
#                    branches: |
#                      [
#                              'master',
#                              'main',
#                      ]
#                    tag_format: 'v${version}_stg'
#                env:
#                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            #       # Runs a set of commands using the runners shell
            #       - name: Run a multi-line script
            #         run: |
            #           echo test, and deploy your project.

#            -   name: update version artifact
#                run: |
#                    ./mvnw deploy
#                env:
#                    GITHUB_TOKEN: ${{ secrets.MAVEN_TOKEN }}

#            -   name: Semantic release
#                run: |
#                    npm ci
#                    npm run release -- --prepare @conveyal/maven-semantic-release \
#                    --publish @semantic-release/github,@conveyal/maven-semantic-release \
#                    --verify-conditions @semantic-release/github,@conveyal/maven-semantic-release \
#                    --verify-release @conveyal/maven-semantic-release --use-conveyal-workflow
#                env:
#                    GITHUB_TOKEN: ${{ secrets.MAVEN_TOKEN }}

#            -   name: Commit files
#                run: |
#                    git config --local user.email "github-actions[bot]@cygogn.com"
#                    git config --local user.name "github-actions[bot]"
#                    git commit -m "Update pom version" -a
#            -   name: Push changes
#                uses: ad-m/github-push-action@master
#                with:
#                    github_token: ${{ secrets.GITHUB_TOKEN }}
#                    branch: ${{ github.ref }}

#            -   name: printInputs
#                run: |
#                    echo "deploy: ${{ github.event.inputs.deploy }}"
#
#            -   name: Move environment tag
#                if: ${{ env.ENVIRONMENT_TAG_NAME}}
#                uses: actions/github-script@v4.0.2
#                with:
#                    github-token: ${{secrets.GITHUB_TOKEN}}
#                    script: |
#                        const tagName = '${{env.ENVIRONMENT_TAG_NAME}}';
#                        try {
#                            await github.git.deleteRef({
#                                owner: context.repo.owner,
#                                repo: context.repo.repo,
#                                ref: "tags/"+tagName
#                            })
#                         } catch (e) {
#                             console.warn("Tag "+tagName+" not found: " + e)
#                         }
#                         await github.git.createRef({
#                             owner: context.repo.owner,
#                             repo: context.repo.repo,
#                             ref: "refs/tags/"+tagName,
#                             sha: context.sha
#                         })
