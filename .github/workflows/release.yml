# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        deploy:
            description: "Environment's name to deploy, must be integration, staging or prod"
            required: true
            default: 'integration'
            
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

#       # Runs versionning
#       - name: Bump version and push tag
#         uses: hennejg/github-tag-action@v4.3.1
#         with:
#           tag_prefix: s
#           github_token: ${{ secrets.GITHUB_TOKEN }}

      - id: date
        run: echo "##[set-output name=data;]$(date)"
      - name: Time badge
#         if: ${{ github.event.inputs.deploy == 'staging' }}
        uses: RubbaBoy/BYOB@v1.2.0
        with:
          NAME: stagingCommit
          LABEL: 'Staging deploy on commit'
          STATUS: ${{ github.sha }}
          COLOR: 0BD491
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Runs integration release
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo test, and deploy your project.
          
      - name: printInputs
        run: |
            echo "deploy: ${{ github.event.inputs.deploy }}"
            echo "Tags: ${{ github.event.inputs.tags }}"           
