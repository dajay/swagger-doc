# This is a basic workflow to help you get started with Actions

name: Manual release

on:
    workflow_dispatch:
        inputs:
#            fromTag:
#                description: "Git tag that shall be deployed"
#                required: true
            deployEnv:
                description: "Environment's name to deploy, must be stg or prod"
                options:
                    - stg
                    - prod
                required: true

permissions:
    contents: write
    packages: write
    pull-requests: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        env:
            ENVIRONMENT_TAG_NAME: integration
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            -   name: Set up JDK 11
                uses: actions/setup-java@v2
                with:
                    distribution: 'adopt'
                    java-version: '11'
                    java-package: jdk
                    architecture: x64

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            -   uses: actions/checkout@v2
                with:
                    fetch-depth: 0

            -   name: Semantic Release
                uses: codfish/semantic-release-action@v1
                with:
                    branches: |
                        [
                            '+([0-9])?(.{+([0-9]),x}).x',
                            'main',
                            'master',
                            'next',
                            'next-major',
                          {
                              name: 'beta',
                              prerelease: true
                          },
                          {
                              name: 'alpha',
                              prerelease: true
                          }
                        ]
                    tag_format: 'v${version}_${{ github.event.inputs.deployEnv }}'
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}